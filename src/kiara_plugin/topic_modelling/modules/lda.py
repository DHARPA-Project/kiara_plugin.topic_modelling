from kiara.api import KiaraModule
from kiara.exceptions import KiaraProcessingException

# work in progress, not ready for use

class RunLda(KiaraModule):
    """
    
    """

    _module_type_name = "topic_modelling.lda"

    def create_inputs_schema(self):
        return {
            "tokens_array": {
                "type": "array",
                "doc": "Array that contains the tokens to process.",
            },
            "no_below": {
                "type": "integer",
                "doc": "Remove tokens that appear in less than no_below documents.",
                "optional": True,
                "default": False
            },
            "no_above": {
                "type": "integer",
                "doc": "Remove tokens that appear in more than no_above documents.",
                "optional": True,
                "default": False
            },
            "no_above": {
                "type": "integer",
                "doc": "Remove tokens that appear in more than no_above documents.",
                "optional": True,
                "default": False
            },
            "num_topics": {
                "type": "integer",
                "doc": "Number of topics to process.",
                "optional": False,
            },
            "passes": {
                "type": "integer",
                "doc": "Number of passes.",
                "optional": True,
                "default": False
            },
             "iterations": {
                "type": "integer",
                "doc": "Number of iterations.",
                "optional": True,
                "default": False
            },
             "random_state": {
                "type": "integer",
                "doc": "Random state.",
                "optional": True,
                "default": False
            },
        }

    def create_outputs_schema(self):
        return {
            "most_common_words": {
                "type": "list",
                "doc": "The 15 most common words overall."
            },
            "topics": {
                "type": "list",
                "doc": "The topics generated by LDA."
            }
        }

    def process(self, inputs, outputs):

        import gensim  # type: ignore
        from gensim import corpora, models # type: ignore

        tokens_array = inputs.get_value_data("tokens_array")
        tokens_array_pa = tokens_array.arrow_array
        tokens_list = tokens_array_pa.to_pylist()
        
        no_below = inputs.get_value_data("no_below")
        no_above = inputs.get_value_data("no_above")
        
        num_topics = inputs.get_value_data("num_topics")
        
        passes = inputs.get_value_data("passes")
        iterations = inputs.get_value_data("iterations")
        random_state = inputs.get_value_data("random_state")

        id2word = corpora.Dictionary(tokens_list)

        if not no_below == False:
            id2word.filter_extremes(no_below=no_below)

        if not no_above == False:
            id2word.filter_extremes(no_above=no_above)

        corpus = [id2word.doc2bow(text) for text in tokens_list]
        model = gensim.models.ldamulticore.LdaMulticore(corpus, id2word=id2word, num_topics=num_topics, random_state=random_state, passes=passes, iterations=iterations)
        
        outputs.set_value("topics", model.print_topics(num_words=30))
        outputs.set_value("most_common_words", id2word.most_common(15))